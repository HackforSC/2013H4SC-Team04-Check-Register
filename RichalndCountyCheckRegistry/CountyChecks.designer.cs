#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RichalndCountyCheckRegistry
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RichlandChecks")]
	public partial class CountyChecksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCountyCheck(CountyCheck instance);
    partial void UpdateCountyCheck(CountyCheck instance);
    partial void DeleteCountyCheck(CountyCheck instance);
    partial void InsertCityCheck(CityCheck instance);
    partial void UpdateCityCheck(CityCheck instance);
    partial void DeleteCityCheck(CityCheck instance);
    #endregion
		
		public CountyChecksDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RichlandChecksConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CountyChecksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CountyChecksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CountyChecksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CountyChecksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CountyCheck> CountyChecks
		{
			get
			{
				return this.GetTable<CountyCheck>();
			}
		}
		
		public System.Data.Linq.Table<CityCheck> CityChecks
		{
			get
			{
				return this.GetTable<CityCheck>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountyChecks")]
	public partial class CountyCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private string _Category_CD;
		
		private string _Category;
		
		private string _Subsystem;
		
		private string _VenderName;
		
		private string _Status_CD;
		
		private double _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckNumberChanging(int value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCategory_CDChanging(string value);
    partial void OnCategory_CDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSubsystemChanging(string value);
    partial void OnSubsystemChanged();
    partial void OnVenderNameChanging(string value);
    partial void OnVenderNameChanged();
    partial void OnStatus_CDChanging(string value);
    partial void OnStatus_CDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public CountyCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_CD", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Category_CD
		{
			get
			{
				return this._Category_CD;
			}
			set
			{
				if ((this._Category_CD != value))
				{
					this.OnCategory_CDChanging(value);
					this.SendPropertyChanging();
					this._Category_CD = value;
					this.SendPropertyChanged("Category_CD");
					this.OnCategory_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subsystem", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Subsystem
		{
			get
			{
				return this._Subsystem;
			}
			set
			{
				if ((this._Subsystem != value))
				{
					this.OnSubsystemChanging(value);
					this.SendPropertyChanging();
					this._Subsystem = value;
					this.SendPropertyChanged("Subsystem");
					this.OnSubsystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenderName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string VenderName
		{
			get
			{
				return this._VenderName;
			}
			set
			{
				if ((this._VenderName != value))
				{
					this.OnVenderNameChanging(value);
					this.SendPropertyChanging();
					this._VenderName = value;
					this.SendPropertyChanged("VenderName");
					this.OnVenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_CD", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Status_CD
		{
			get
			{
				return this._Status_CD;
			}
			set
			{
				if ((this._Status_CD != value))
				{
					this.OnStatus_CDChanging(value);
					this.SendPropertyChanging();
					this._Status_CD = value;
					this.SendPropertyChanged("Status_CD");
					this.OnStatus_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityChecks")]
	public partial class CityCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CheckId;
		
		private string _PayeeName;
		
		private System.DateTime _CheckDate;
		
		private double _Amount;
		
		private string _City_Division;
		
		private string _Check_Description;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckIdChanging(long value);
    partial void OnCheckIdChanged();
    partial void OnPayeeNameChanging(string value);
    partial void OnPayeeNameChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnCity_DivisionChanging(string value);
    partial void OnCity_DivisionChanged();
    partial void OnCheck_DescriptionChanging(string value);
    partial void OnCheck_DescriptionChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public CityCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CheckId
		{
			get
			{
				return this._CheckId;
			}
			set
			{
				if ((this._CheckId != value))
				{
					this.OnCheckIdChanging(value);
					this.SendPropertyChanging();
					this._CheckId = value;
					this.SendPropertyChanged("CheckId");
					this.OnCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this.OnPayeeNameChanging(value);
					this.SendPropertyChanging();
					this._PayeeName = value;
					this.SendPropertyChanged("PayeeName");
					this.OnPayeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Division", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string City_Division
		{
			get
			{
				return this._City_Division;
			}
			set
			{
				if ((this._City_Division != value))
				{
					this.OnCity_DivisionChanging(value);
					this.SendPropertyChanging();
					this._City_Division = value;
					this.SendPropertyChanged("City_Division");
					this.OnCity_DivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_Description", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Check_Description
		{
			get
			{
				return this._Check_Description;
			}
			set
			{
				if ((this._Check_Description != value))
				{
					this.OnCheck_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Check_Description = value;
					this.SendPropertyChanged("Check_Description");
					this.OnCheck_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(256)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
